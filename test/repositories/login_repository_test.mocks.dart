// Mocks generated by Mockito 5.4.6 from annotations
// in scmp_mobile_assg/test/repositories/login_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;
import 'dart:typed_data' as _i11;

import 'package:flutter_secure_storage/flutter_secure_storage.dart' as _i13;
import 'package:http/http.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;
import 'package:scmp_mobile_assg/models/requests/fetch_staff_list_request.dart'
    as _i10;
import 'package:scmp_mobile_assg/models/requests/login_request.dart' as _i7;
import 'package:scmp_mobile_assg/models/responses/login_response.dart' as _i5;
import 'package:scmp_mobile_assg/models/responses/staff_list_response.dart'
    as _i9;
import 'package:scmp_mobile_assg/models/result.dart' as _i4;
import 'package:scmp_mobile_assg/services/api_service.dart' as _i2;
import 'package:scmp_mobile_assg/services/secure_storage_service.dart' as _i12;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i2.ApiService {
  @override
  _i3.Future<_i4.Result<_i5.LoginResponse>> login(
    _i6.Client? client,
    _i7.LoginRequest? request,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#login, [client, request]),
            returnValue: _i3.Future<_i4.Result<_i5.LoginResponse>>.value(
              _i8.dummyValue<_i4.Result<_i5.LoginResponse>>(
                this,
                Invocation.method(#login, [client, request]),
              ),
            ),
            returnValueForMissingStub:
                _i3.Future<_i4.Result<_i5.LoginResponse>>.value(
                  _i8.dummyValue<_i4.Result<_i5.LoginResponse>>(
                    this,
                    Invocation.method(#login, [client, request]),
                  ),
                ),
          )
          as _i3.Future<_i4.Result<_i5.LoginResponse>>);

  @override
  _i3.Future<_i4.Result<_i9.StaffListResponse>> fetchStaffList(
    _i6.Client? client,
    _i10.FetchStaffListRequest? request,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#fetchStaffList, [client, request]),
            returnValue: _i3.Future<_i4.Result<_i9.StaffListResponse>>.value(
              _i8.dummyValue<_i4.Result<_i9.StaffListResponse>>(
                this,
                Invocation.method(#fetchStaffList, [client, request]),
              ),
            ),
            returnValueForMissingStub:
                _i3.Future<_i4.Result<_i9.StaffListResponse>>.value(
                  _i8.dummyValue<_i4.Result<_i9.StaffListResponse>>(
                    this,
                    Invocation.method(#fetchStaffList, [client, request]),
                  ),
                ),
          )
          as _i3.Future<_i4.Result<_i9.StaffListResponse>>);

  @override
  _i3.Future<_i4.Result<_i11.Uint8List>> downloadStaffImage(
    _i6.Client? client,
    String? url,
    String? fileName,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#downloadStaffImage, [client, url, fileName]),
            returnValue: _i3.Future<_i4.Result<_i11.Uint8List>>.value(
              _i8.dummyValue<_i4.Result<_i11.Uint8List>>(
                this,
                Invocation.method(#downloadStaffImage, [client, url, fileName]),
              ),
            ),
            returnValueForMissingStub:
                _i3.Future<_i4.Result<_i11.Uint8List>>.value(
                  _i8.dummyValue<_i4.Result<_i11.Uint8List>>(
                    this,
                    Invocation.method(#downloadStaffImage, [
                      client,
                      url,
                      fileName,
                    ]),
                  ),
                ),
          )
          as _i3.Future<_i4.Result<_i11.Uint8List>>);
}

/// A class which mocks [SecureStorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSecureStorageService extends _i1.Mock
    implements _i12.SecureStorageService {
  @override
  _i3.Future<void> saveToken(
    _i13.FlutterSecureStorage? storage,
    String? token,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#saveToken, [storage, token]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<String?> getToken(_i13.FlutterSecureStorage? storage) =>
      (super.noSuchMethod(
            Invocation.method(#getToken, [storage]),
            returnValue: _i3.Future<String?>.value(),
            returnValueForMissingStub: _i3.Future<String?>.value(),
          )
          as _i3.Future<String?>);

  @override
  _i3.Future<void> deleteToken(_i13.FlutterSecureStorage? storage) =>
      (super.noSuchMethod(
            Invocation.method(#deleteToken, [storage]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}
